package in.billmitra.entities;

import in.billmitra.entities.enums.PaymentMethod;
import in.billmitra.entities.enums.TransactionStatus;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.RequiredArgsConstructor;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.util.List;

@Entity
@Table(name = "ref_order")
@Data
@Builder
@AllArgsConstructor
@RequiredArgsConstructor
public class OrderEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    @JoinColumn(name = "store_id")
    private StoreEntity store;

    @ManyToOne
    @JoinColumn(name = "user_id")
    private UserEntity createdBy;

    private Double taxFee;

    private Double discount;

    // This is subTotal + taxFee - discount
    @Column(nullable = false)
    private Double totalAmount;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private PaymentMethod paymentMethod;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private TransactionStatus transactionStatus;

    @CreationTimestamp
    @Column(nullable = false, updatable = false)
    private Long createdAt;

    @UpdateTimestamp
    @Column(nullable = false)
    private Long updatedAt;

    @OneToMany(mappedBy = "order", cascade = CascadeType.ALL)
    private List<OrderItemMappingEntity> items;

    // Generated by Razor Pay if the payment mode is UPI.
    private String transactionId;
}
